---
# tasks file for common
- name: Gather service facts
  ansible.builtin.service_facts:

- name: Install gpg
  ansible.builtin.apt:
    name: gnupg2
    state: present

- name: Add an Apt signing keys
  ansible.builtin.apt_key:
    url: "{{ item }}"
    state: present
  with_items: "{{ gpg_keys }}"

- name: Add repositories into sources list
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
  with_items: "{{ apt_repositories }}"

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    force_apt_get: true
    cache_valid_time: 3600

- name: Upgrade all apt packages
  ansible.builtin.apt:
    upgrade: dist
    force_apt_get: true

- name: Install required applications
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present

- name: Download installation packages
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/root/{{ item.name }}"
    owner: root
    group: root
    mode: "0770"
  with_items: "{{ resources }}"
  when: resources is defined

- name: Install downloaded packages
  ansible.builtin.command:
    cmd: dpkg -i /root/{{ item.name }}
  with_items: "{{ resources }}"
  when: resources is defined
  changed_when: true

- name: Create symbolic link for batcat to bat
  ansible.builtin.file:
    src: /usr/bin/batcat
    dest: /usr/bin/bat
    state: link

- name: Update glances.service
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/glances.service
    regexp: '^ExecStart='
    line: 'ExecStart=/usr/bin/glances -w -B 0.0.0.0'
    backup: true
  notify: Reload systemd daemon

- name: Configure DNS servers for systemd-resolved
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: '^DNS='
    line: DNS={{ dns_server }}
    state: present
  when: ansible_facts['services']['systemd-resolved.service'] is defined
  notify: Restart systemd-resolved

- name: Restart and enable services
  ansible.builtin.service:
    name: "{{ services }}"
    state: restarted
    enabled: true
